/* Advanced animations and transitions */

/* Particle system animations */
@keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-20px); }
}

@keyframes rotate {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

@keyframes slideInLeft {
    from {
        opacity: 0;
        transform: translateX(-100px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes slideInRight {
    from {
        opacity: 0;
        transform: translateX(100px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes scaleIn {
    from {
        opacity: 0;
        transform: scale(0.8);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

@keyframes bounceIn {
    0% {
        opacity: 0;
        transform: scale(0.3);
    }
    50% {
        opacity: 1;
        transform: scale(1.05);
    }
    70% {
        transform: scale(0.9);
    }
    100% {
        opacity: 1;
        transform: scale(1);
    }
}

@keyframes glowPulse {
    0%, 100% {
        box-shadow: 0 0 20px rgba(79, 172, 254, 0.3);
    }
    50% {
        box-shadow: 0 0 30px rgba(79, 172, 254, 0.6);
    }
}

@keyframes dataFlow {
    0% {
        transform: translateX(-100%);
        opacity: 0;
    }
    50% {
        opacity: 1;
    }
    100% {
        transform: translateX(100%);
        opacity: 0;
    }
}

@keyframes ripple {
    0% {
        transform: scale(0);
        opacity: 1;
    }
    100% {
        transform: scale(4);
        opacity: 0;
    }
}

/* Network packet animations */
.packet {
    position: absolute;
    width: 8px;
    height: 8px;
    background: var(--accent-gradient);
    border-radius: 50%;
    animation: dataFlow 3s ease-in-out infinite;
    box-shadow: 0 0 10px rgba(79, 172, 254, 0.6);
}

.packet.fast {
    animation-duration: 1s;
}

.packet.slow {
    animation-duration: 5s;
}

/* Network node animations */
.network-node {
    position: relative;
    display: inline-block;
    cursor: pointer;
}

.network-node::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
    height: 100%;
    background: rgba(79, 172, 254, 0.2);
    border-radius: 50%;
    animation: ripple 2s linear infinite;
    z-index: -1;
}

.network-node:hover::before {
    animation-duration: 1s;
}

/* Connection line animations */
.connection-line {
    position: relative;
    overflow: hidden;
}

.connection-line::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, 
        transparent 0%, 
        rgba(79, 172, 254, 0.6) 50%, 
        transparent 100%);
    animation: dataFlow 2s ease-in-out infinite;
}

.connection-line.active::after {
    animation-duration: 0.8s;
}

/* Loading animations */
.spinner {
    width: 20px;
    height: 20px;
    border: 2px solid rgba(79, 172, 254, 0.3);
    border-top: 2px solid var(--accent-blue);
    border-radius: 50%;
    animation: rotate 1s linear infinite;
}

.dots-loading {
    display: inline-flex;
    gap: 4px;
}

.dots-loading span {
    width: 6px;
    height: 6px;
    background: var(--accent-blue);
    border-radius: 50%;
    animation: bounce 1.4s ease-in-out infinite both;
}

.dots-loading span:nth-child(1) { animation-delay: -0.32s; }
.dots-loading span:nth-child(2) { animation-delay: -0.16s; }
.dots-loading span:nth-child(3) { animation-delay: 0s; }

@keyframes bounce {
    0%, 80%, 100% {
        transform: scale(0);
    }
    40% {
        transform: scale(1);
    }
}

/* Text animations */
.typewriter {
    overflow: hidden;
    border-right: 2px solid var(--accent-blue);
    white-space: nowrap;
    animation: typing 3.5s steps(40, end), blink-caret 0.75s step-end infinite;
}

@keyframes typing {
    from { width: 0; }
    to { width: 100%; }
}

@keyframes blink-caret {
    from, to { border-color: transparent; }
    50% { border-color: var(--accent-blue); }
}

/* Hover effects */
.hover-lift {
    transition: transform var(--transition-base), box-shadow var(--transition-base);
}

.hover-lift:hover {
    transform: translateY(-4px);
    box-shadow: var(--shadow-glow);
}

.hover-glow {
    transition: box-shadow var(--transition-base);
}

.hover-glow:hover {
    box-shadow: 0 0 20px rgba(79, 172, 254, 0.4);
}

.hover-scale {
    transition: transform var(--transition-base);
}

.hover-scale:hover {
    transform: scale(1.05);
}

/* Interactive elements */
.interactive-element {
    position: relative;
    overflow: hidden;
}

.interactive-element::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, 
        transparent 0%, 
        rgba(255, 255, 255, 0.1) 50%, 
        transparent 100%);
    transition: left var(--transition-base);
}

.interactive-element:hover::before {
    left: 100%;
}

/* Progress animations */
@keyframes progressFill {
    from { width: 0%; }
    to { width: var(--target-width, 50%); }
}

.animated-progress {
    animation: progressFill 2s ease-out forwards;
}

/* Card flip animation */
.flip-card {
    perspective: 1000px;
    width: 100%;
    height: 200px;
}

.flip-card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center;
    transition: transform 0.6s;
    transform-style: preserve-3d;
}

.flip-card:hover .flip-card-inner {
    transform: rotateY(180deg);
}

.flip-card-front, .flip-card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    border-radius: 12px;
    padding: var(--space-md);
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
}

.flip-card-front {
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.flip-card-back {
    background: var(--accent-gradient);
    transform: rotateY(180deg);
}

/* Network topology animations */
.topology-node {
    animation: float 3s ease-in-out infinite;
}

.topology-node:nth-child(odd) {
    animation-delay: -1.5s;
}

.topology-connection {
    stroke-dasharray: 10;
    animation: dash 2s linear infinite;
}

@keyframes dash {
    to {
        stroke-dashoffset: -20;
    }
}

/* Quiz animations */
.quiz-option {
    position: relative;
    overflow: hidden;
}

.quiz-option.correct {
    animation: correctAnswer 0.5s ease;
    background: rgba(76, 175, 80, 0.2) !important;
    border-color: #4caf50 !important;
}

.quiz-option.incorrect {
    animation: incorrectAnswer 0.5s ease;
    background: rgba(244, 67, 54, 0.2) !important;
    border-color: #f44336 !important;
}

@keyframes correctAnswer {
    0% { transform: scale(1); }
    50% { transform: scale(1.02); }
    100% { transform: scale(1); }
}

@keyframes incorrectAnswer {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-5px); }
    75% { transform: translateX(5px); }
}

/* Notification animations */
.notification {
    position: fixed;
    top: 20px;
    right: 20px;
    padding: var(--space-md);
    background: rgba(26, 31, 46, 0.95);
    border-radius: 8px;
    border-left: 4px solid var(--accent-blue);
    box-shadow: var(--shadow-card);
    transform: translateX(100%);
    transition: transform var(--transition-base);
    z-index: 1200;
}

.notification.show {
    transform: translateX(0);
}

.notification.success {
    border-left-color: #4caf50;
}

.notification.error {
    border-left-color: #f44336;
}

.notification.warning {
    border-left-color: #ff9800;
}

/* Particle effects */
.particle-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: -1;
}

.particle {
    position: absolute;
    width: 2px;
    height: 2px;
    background: rgba(79, 172, 254, 0.6);
    border-radius: 50%;
    animation: particleFloat 10s linear infinite;
}

@keyframes particleFloat {
    0% {
        transform: translateY(100vh) translateX(0);
        opacity: 0;
    }
    10% {
        opacity: 1;
    }
    90% {
        opacity: 1;
    }
    100% {
        transform: translateY(-10vh) translateX(100px);
        opacity: 0;
    }
}

/* Smooth transitions for all interactive elements */
* {
    transition: color var(--transition-fast), 
                background-color var(--transition-fast),
                border-color var(--transition-fast),
                opacity var(--transition-fast);
}

/* Reduce motion for accessibility */
@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
    }
}